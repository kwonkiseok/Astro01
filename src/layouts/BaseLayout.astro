---
import Header from '../components/Header/index.astro';
import Footer from '../components/Footer/index.astro';
import Content from '../components/Content/index.astro';
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';

const { pageTitle } = Astro.props;
---
<html lang="ko">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Gisogi &gt; { pageTitle }</title>
		<ViewTransitions />
	</head>
	<body>
		<div class="wrap">
			<Header />
			<Content pageTitle={ pageTitle }>
                <slot />
            </Content>
			<Footer />
		</div>
        <div class="custom-cursor"></div>
        <script is:inline>
			const cursorFunc = () => {
				var cursor = document.querySelector(".custom-cursor");
				var links = document.querySelectorAll("a");
				var initCursor = false;

				for (var i = 0; i < links.length; i++) {
				var selfLink = links[i];

				selfLink.addEventListener("mouseover", function() {
					cursor.classList.add("custom-cursor--link");
				});
				selfLink.addEventListener("mouseout", function() {
					cursor.classList.remove("custom-cursor--link");
				});
				}

				window.onmousemove = function(e) {
					var mouseX = e.clientX;
					var mouseY = e.clientY;
					
					if (!initCursor) {
						cursor.classList.add('fade-in');
						initCursor = true;
					}
					
					cursor.style.top = mouseY + 'px';
					cursor.style.left = mouseX + 'px';
				};
			
				window.onmouseout = function(e) {
					cursor.classList.remove('fade-in');
					initCursor = false;
				};
			}

			const stickyFunc = () => {
				const header = document.querySelector('.header');		// header 섹션
				const sentinal = document.querySelector('.sentinal');

				const stickyNav = function (entries) {
					const [entry] = entries;

					// 뷰포트에서 header 섹션이 사라지는(isIntersecting: false) 시점에 네비게이션 바 요소에 sticky 클래스를 추가
					if (!entry.isIntersecting) {
						header.classList.add('sticky-init');
					} else {
						header.classList.remove('sticky-init');
					} 
				};

				const sentinalObserver = new IntersectionObserver(stickyNav, {
					root: null, // entire viewport
					threshold: 0, // root의 0% 만큼 header가 보이거나(isIntersecting: true) 사라지면(isIntersecting: false) callback function을 실행
				});

				sentinalObserver.observe(sentinal);
			}

			document.addEventListener('astro:page-load', () => {
				cursorFunc();
				stickyFunc();
			});

			document.addEventListener('astro:before-swap', () => {
				cursorFunc();
			});
			
        </script>
	</body>
</html>
